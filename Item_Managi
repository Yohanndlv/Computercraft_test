local depositChest = peripheral.wrap("front")  -- Le coffre de dépôt (modifier selon la position)
local chests = {}  -- Table pour les autres coffres
local unSortedChest -- Coffre pour les objets non triés

-- Trouver les coffres (coffre de dépôt, coffres de A-Z et un coffre pour les non triés)
local function findChests()
    local sides = peripheral.getNames()
    local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    
    -- Le coffre de dépôt doit être à la position 'front'
    for _, side in ipairs(sides) do
        local pType = peripheral.getType(side)
        
        if pType == "minecraft:chest" then
            -- Le premier coffre est celui de dépôt
            if not depositChest then
                depositChest = peripheral.wrap(side)
            elseif not unSortedChest then
                unSortedChest = peripheral.wrap(side)
            else
                -- Coffres pour les lettres A-Z
                for i = 1, #alphabet do
                    if not chests[alphabet:sub(i, i)] then
                        chests[alphabet:sub(i, i)] = peripheral.wrap(side)
                        break
                    end
                end
            end
        end
    end
end

-- Trier les objets par première lettre
local function sortItems()
    -- Récupérer tous les objets du coffre de dépôt
    local items = depositChest.list()

    -- Vérifier si des objets existent dans le coffre
    if not items then
        print("Aucun objet à trier.")
        return
    end

    for slot, item in pairs(items) do
        -- Vérification que l'objet a un nom valide
        if item and item.name then
            -- Prendre la première lettre du nom de l'objet
            local firstLetter = item.name:sub(1, 1):upper()

            -- Si la première lettre est une lettre de l'alphabet
            if firstLetter:match("[A-Z]") then
                -- Vérifier si le coffre correspondant existe
                if chests[firstLetter] then
                    -- Déplacer l'objet dans le coffre correspondant
                    local success, message = pcall(function()
                        depositChest.pushItems(chests[firstLetter], slot, item.count)
                    end)
                    if not success then
                        print("Erreur en déplaçant " .. item.name .. ": " .. message)
                    end
                end
            else
                -- Si l'objet n'a pas de première lettre valide (non alphabetique), on l'envoie dans le coffre non trié
                if unSortedChest then
                    local success, message = pcall(function()
                        depositChest.pushItems(unSortedChest, slot, item.count)
                    end)
                    if not success then
                        print("Erreur en déplaçant " .. item.name .. " dans le coffre non trié: " .. message)
                    end
                end
            end
        else
            print("Objet invalide détecté, skipping...")
        end
    end
end

-- Boucle principale
findChests()

while true do
    print("Tri des objets...")
    sortItems()
    sleep(10)  -- Attendre 10 secondes avant de refaire le tri
end
