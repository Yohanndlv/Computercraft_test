local monitor
local chests = {}
local depositChest
local depositChestIndex = nil

-- Fonction pour récupérer les coffres
for _, name in ipairs(peripheral.getNames()) do
    local pType = peripheral.getType(name)
    if pType == "monitor" then
        monitor = peripheral.wrap(name)
    elseif pType == "minecraft:chest" then
        table.insert(chests, peripheral.wrap(name))
    end
end

-- Vérifie qu'il y a au moins un coffre
if #chests == 0 then
    print("Aucun coffre trouvé.")
    return
end

-- Identifier le coffre avec le plus petit index
local minIndex = math.huge
for i, chest in ipairs(chests) do
    local chestName = peripheral.getName(chest)
    local number = tonumber(chestName:match("%d+"))
    if number and number < minIndex then
        minIndex = number
        depositChest = chest
        depositChestIndex = i
    end
end

if not depositChest then
    print("Impossible de trouver le coffre de dépôt.")
    return
end

-- Fonction pour trier les objets dans les coffres
local function sortItems()
    for i, chest in ipairs(chests) do
        if i ~= depositChestIndex then  -- Ne pas trier le coffre de dépôt
            local items = chest.list()
            for slot, item in pairs(items) do
                local firstLetter = item.name:sub(1, 1):upper()
                local targetChestName = "Coffre " .. firstLetter
                -- Trouver le coffre cible correspondant à la première lettre
                local targetChest = nil
                for _, target in ipairs(chests) do
                    if peripheral.getName(target):match(targetChestName) then
                        targetChest = target
                        break
                    end
                end
                -- Si le coffre cible existe, déplacer l'objet
                if targetChest then
                    local targetSlot = targetChest.getFreeSlot()
                    if targetSlot then
                        targetChest.pushItems(chest, slot, 64, targetSlot)
                    end
                end
            end
        end
    end
end

-- Boucle principale
while true do
    -- Récupérer la liste des objets dans le coffre de dépôt
    local depositItems = depositChest.list()
    -- Trier les objets à l'intérieur du coffre de dépôt
    for slot, item in pairs(depositItems) do
        -- Trier par la première lettre
        local firstLetter = item.name:sub(1, 1):upper()
        local targetChestName = "Coffre " .. firstLetter
        -- Trouver le coffre cible correspondant à la première lettre
        local targetChest = nil
        for _, target in ipairs(chests) do
            if peripheral.getName(target):match(targetChestName) then
                targetChest = target
                break
            end
        end
        -- Si le coffre cible existe, déplacer l'objet
        if targetChest then
            local targetSlot = targetChest.getFreeSlot()
            if targetSlot then
                targetChest.pushItems(depositChest, slot, 64, targetSlot)
            end
        end
    end
    -- Attendre 5 secondes avant de réessayer
    sleep(5)
end
