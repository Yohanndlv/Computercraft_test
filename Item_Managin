-- Périphériques : coffres et monitor
local depositChest = peripheral.wrap("front")  -- Le coffre de dépôt (modifier selon la position)
local chests = {}  -- Table pour les autres coffres (A-Z)
local unSortedChest  -- Coffre pour les objets non triés

-- Trouver les coffres (coffre de dépôt, coffres de A-Z et un coffre pour les non triés)
local function findChests()
    local sides = peripheral.getNames()
    local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    
    -- Le premier coffre détecté sera le coffre de dépôt
    for _, side in ipairs(sides) do
        local pType = peripheral.getType(side)
        
        if pType == "minecraft:chest" then
            -- Si c'est le premier coffre, on l'associe au dépôt
            if not depositChest then
                depositChest = peripheral.wrap(side)
            elseif not unSortedChest then
                unSortedChest = peripheral.wrap(side)
            else
                -- Les coffres suivants sont associés aux lettres A-Z
                for i = 1, #alphabet do
                    if not chests[alphabet:sub(i, i)] then
                        chests[alphabet:sub(i, i)] = peripheral.wrap(side)
                        break
                    end
                end
            end
        end
    end
end

-- Trier les objets par première lettre
local function sortItems()
    local items = depositChest.list()

    for slot, item in pairs(items) do
        -- Prendre la première lettre du nom de l'objet (majuscule)
        local firstLetter = item.name:sub(1, 1):upper()

        -- Si la première lettre est une lettre de l'alphabet (A-Z)
        if firstLetter:match("[A-Z]") then
            if chests[firstLetter] then
                -- Déplacer l'objet dans le coffre correspondant à la lettre
                local success, message = pcall(function()
                    -- Déplacement des items du coffre de dépôt vers le coffre de la lettre
                    depositChest.pushItems(chests[firstLetter], slot, item.count)
                end)
                if not success then
                    print("Erreur en déplaçant " .. item.name .. ": " .. message)
                end
            end
        else
            -- Si l'objet n'a pas de première lettre valide (par exemple un chiffre ou un caractère spécial), on l'envoie dans le coffre non trié
            if unSortedChest then
                local success, message = pcall(function()
                    -- Déplacement des items vers le coffre non trié
                    depositChest.pushItems(unSortedChest, slot, item.count)
                end)
                if not success then
                    print("Erreur en déplaçant " .. item.name .. " dans le coffre non trié: " .. message)
                end
            end
        end
    end
end

-- Boucle principale
findChests()

while true do
    print("Tri des objets...")
    sortItems()
    sleep(10)  -- Attendre 10 secondes avant de refaire le tri
end
