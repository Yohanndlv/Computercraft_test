-- Fonction pour obtenir la première lettre d'une chaîne, en majuscule
function getFirstLetter(str)
    return str:sub(1, 1):upper()
end

-- Liste des coffres de A à Z
local chests = {}
for i = 1, 26 do
    chests[i] = "chest_" .. string.char(64 + i)  -- "chest_A", "chest_B", ..., "chest_Z"
end

-- Le coffre de dépôt est le premier coffre
local depositChest = "chest_deposit"
local errorChest = "chest_error"  -- Ce coffre sera utilisé pour les objets non triés

-- Fonction pour transférer les objets
function transferItem(fromChest, toChest, itemName)
    -- Place l'objet du coffre source au coffre de destination
    local item = turtle.getItemDetail() -- Récupère l'objet actuellement sous le curseur
    if item then
        turtle.select(1)
        turtle.transferTo(toChest, 64) -- Envoie 64 objets max vers le coffre
    end
end

-- Fonction pour trier les objets dans le coffre
function sortItems()
    while true do
        -- Vérifie si le turtle est bien dans le coffre de dépôt
        if turtle.detect() then
            turtle.select(1)  -- Sélectionne le premier inventaire
            local item = turtle.getItemDetail()  -- Récupère l'objet
            if item then
                local firstLetter = getFirstLetter(item.name)  -- Récupère la première lettre du nom
                local targetChestIndex = nil

                -- Vérifie si la première lettre est une lettre de A à Z
                if firstLetter:match("%a") then
                    local letterIndex = firstLetter:byte() - 64  -- Convertit la lettre en un numéro (A=1, B=2, ..., Z=26)
                    targetChestIndex = letterIndex
                end

                -- Si la lettre est une lettre valide, on envoie l'objet au coffre approprié
                if targetChestIndex then
                    print("Transfert de " .. item.name .. " vers " .. chests[targetChestIndex])
                    transferItem(depositChest, chests[targetChestIndex], item.name)
                else
                    -- Si ce n'est pas une lettre valide, envoyer l'objet dans le coffre d'erreur
                    print("Objet non trié, transfert vers le coffre d'erreur : " .. item.name)
                    transferItem(depositChest, errorChest, item.name)
                end
            end
        end
        sleep(0.5)  -- Pause pour éviter de trop solliciter le processeur
    end
end

-- Appeler la fonction pour commencer à trier
sortItems()
